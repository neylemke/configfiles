* Preambulo
#+STARTUP: overview
#+STARTUP: hidestars
#+STARTUP: logdone
#+PROPERTY: Effort_ALL  0:10 0:20 0:30 1:00 2:00 4:00 6:00 8:00
#+COLUMNS: %38ITEM(Details) %TAGS(Context) %7TODO(To Do) %5Effort(Time){:} %6CLOCKSUM{Total}
#+SEQ_TODO: TODO(t) STARTED(s) WAITING(w) APPT(a) | DONE(d) CANCELLED(c) DEFERRED(f) DELEGATED(g)

* Computação
** Github 
*** TODO Tenho que aprender a realizar os commits de forma manual
** Lisp
**** Instalar Kernel Jupyter
***** Criar Imagem com Maxima Dentro
***** Instalar linedit
***** Resolver Bug do sb-rotate-byte 
** Mathematica
*** Para matar Notebooks
    * Liste com Notebooks[]
    * Mate com NotebookClose[notebook]
*** Para instalar R no El Capitan
**** The other method involves patching a library that is part of RLink.
**** Open Terminal.app and navigate to SystemFiles/Links/RLink/SystemFiles/Libraries/MacOSX-x86-64 within Mathematica‘s $InstallationDirectory. There will be a file named libjri.jnilib there
**** Make a backup of this file using cp libjri.jnilib libjri.jnilib.backup
**** Rewrite the hard-coded location of the R libraries it uses with the following command:
**** install_name_tool -change @loader_path/libR.dylib /Library/Frameworks/R.framework/Resources/lib/libR.dylib libjri.jnilib
**** This assumes that R is installed in the standard location within /Library/Frameworks.
**** Re-launch the Mathematica kernel and proceed as described in the article above. Setting DYLD_LIBRARY_PATH can now be skipped.
*** Para rodar o Mathematica 7.0 em linha de comando
    % /Applications/Mathematica.app/Contents/MacOS/MathKernel -initfile
*** Para gerar imagens para a PLOS
Estou preparando um manuscrito para a PLoS e sofri um pouco para acertar a melhor maneira de criar figuras de acordo com as especificações da revista.
Então estou postando minha solução aqui, talvez seja útil para outros sofredores:
#+BEGIN_SRC mathematica
FigToPLoS[gr_, size_, resolution_:300] := 
  Rasterize[gr, "Image", RasterSize -> resolution size/2.54, 
   ImageSize -> 28.3465 size];
(* gr - gráfico; size - tamanho em cm; resolution - se em branco, 300 dpi *)
#+END_SRC
Depois, clique com o botão direito na saída, "Save Image As...". A PLoS sugere figuras em TIFF: antes de salvar, vá em Options e acerte: "Image Encoding": LZW e "Image Resolution": 300. Se preferir, torne essas configurações como padrão, clicando em "Use Settings as Defaults".

*** Para eliminar coisas inúteis
**** Use Nothing
** Sistema Operacional 
*** Ruby
**** Para consertar o Ruby eu usei
#+begin_src shell
git reset --hard FETCH_HEAD
brew update 
#+end_src

Usei a receita de bolo daqui:  
http://stackoverflow.com/questions/11173458/osx-homebrew-error-uninitialized-constant-macos 

*** Acesso fácil exemplos de comandos 

**** cheat command 

https://github.com/chrisallenlane/cheat

** MacOSX
*** Dicas

**** Para Tirar Fotos use Apple+Shift 3 -> Tela Cheia
**** Para Tirar Fotos use Apple+Shift 4 -> Parte da Tela
**** Para descobrir versao de lib: otool -L lib 
**** Para resolver problemas com Libraries no El Capitan:
#+BEGIN_SRC bash
sudo install_name_tool -change oldnamelib   newname libqueechamada 
#+END_SRC
**** Para converter em json: dataconvert 

*** TODO Descobrir como indexar mensagens do e-mail, photos, etc.
    :PROPERTIES:
    :ID:       C5941798-C43E-4C00-B579-F0DCAF542939
    :END:
**** Para Descobrir senhas armazenadas no Wifi: 
***** The password for the wifi will be stored in the keychain => /Applications/Utilities/
*** Mudar nome
#+BEGIN_SRC shell
sudo scutil --set ComputerName "laptop"
sudo scutil --set LocalHostName "laptop"
sudo scutil --set HostName "laptop"
#+END_SRC
** Grids
*** Para acompanhar um job dag
**** watch -n 10 condor_q -dag lemke
*** Para verificar o status de um job no globus
**** condor_q -globus
*** Para descobrir as variaveis de ambiente na ce
**** globus-job-run ce.sp.grid.unesp.br:/jobmanager-fork /usr/bin/env
*** TODO Copiar material da escola para minha área no GridUnesp
** Org-Mode
*** Org-Card
    :ATTACH:
    :PROPERTIES:
    :Attachments: [[file:orgcard.txt][OrgCard]]
    :ID:       6D40E60A-90D0-4219-8A17-CDD01B2E97D7
    :END:
*** GTD

    :PROPERTIES:
    :Author:   Charles Cave
    :Title:    How I use Emacs and Org-mode to implement GTD
    :Artigo:   [[http://members.optusnet.com.au/~charles57/GTD/gtd_workflow.html][Artigo]]
    :END:



*** Dicas

****  Setar org-capture-templates  resolve "Invalid capture target specification"
**** Erro ao inserir PROPERTIES ocorre se uma PROPERTIES estiver errado
** Ubuntu
*** Para descobrir os pacotes instalados

**** dpkg --get-selections

*** ssh remoto tunelando uma maquina de casa para a master

**** ssh -t lemke@200.145.134.134 ssh 10.1.0.5

*** byobu gerenciador de screens

** Clojure
*** Para permitir uso do trace na repl

    (use 'clojure.tools.trace)

    (require '[clojure.tools.trace])

(clojure.tools.trace/trace-vars recursion/function-name)

*** Para acessar a documentação

(use 'clojure.repl) 

** Emacs

*** artist-mode (C-c C-a comando )

*** Instalei o GNUs

*** Resolvi a questão com o xelatex

*** Dicas para configurar o emacs no MAC

**** Os nomes das teclas:

1) mac-function-modifier

2) mac-control-modifier

3) mac-command-modifier

4) mac-option-modifier

5) mac-right-command-modifier

6) mac-right-control-modifier

7) mac-right-option-modifier

*** Para rodar ipython no emacs
#+BEGIN_SRC bash
ipython --simple-prompt -i 
#+END_SRC
** AWS

*** Logar na instância irtual:
#+BEGIN_SRC bash
ssh -i "Teste.pem" ubuntu@ec2-52-35-96-90.us-west-2.compute.amazonaws.com
#+END_SRC

*** Pacotes para serem instalados na instancia:
#+BEGIN_SRC 
sudo apt-get update
sudo apt-get install r-base r-base-dev 
sudo apt-get install emacs24
sudo apt-get install ipython
sudo -E apt-get install -y ubuntu-desktop
#+END_SRC

*** instalar dropbox
#+BEGIN_SRC bash
sudo apt-get install texlive
#+END_SRC

*** Software de Apoio

**** x2go
**** firessh

** ssh
*** Para acessar a maquina newton:
#+BEGIN_SRC bash 
ssh -t lemke@tesla 'ssh neylemke@200.145.139.136'
#+END_SRC
** encoding
*** para descobrir encoding use: file -I
*** para mudar enconding Crtl-x return r utf-8-hfs-mac (Casa)
** Jupyter
*** Para atualizar
#+BEGIN_SRC bash
conda update conda
conda update ipython
conda update jupyter
conda install -c r r-essentials
#+END_SRC

*** Pacotes úteis
#+BEGIN_SRC bash
conda install --yes mpld3
conda install --yes numba
conda install --yes seaborn
conda install --yes -c conda-forge jupyter_contrib_nbextensions
conda install --yes sh
conda install --yes pip
conda install --yes -c conda-forge jupyterlab
conda install altair --channel conda-forge
jupyter nbextension enable vega --py --sys-prefix
#+END_SRC

*** Instalar reveal.js
#+BEGIN_SRC bash
conda install --yes -c damianavila82 rise
jupyter nbextension install rise --py --sys-prefix
jupyter nbextension enable rise --py --sys-prefix
jupyter nbconvert Slide.ipynb --to slides --reveal-prefix "http://cdn.jsdelivr.net/reveal.js/2.6.2"
#+END_SRC
 
*** Temas

#+BEGIN_SRC bash
jt -t oceans16
#+END_SRC
*** Para usar no emacs
**** Inicie o notebook no terminal
**** copie o token
**** Use o comando ein:notebooklist-login e entre com o token
*** Para instalar vim-mode:
#+BEGIN_SRC bash
# You may need the following to create the directoy
mkdir -p $(jupyter --data-dir)/nbextensions
# Now clone the repository
cd $(jupyter --data-dir)/nbextensions
git clone https://github.com/lambdalisue/jupyter-vim-binding vim_binding
chmod -R go-w vim_binding
# Enable the extension
jupyter nbextension enable vim_binding/vim_binding
#+END_SRC
*** Exportar reveal.js
**** jupyter nbconvert Slide.ipynb --to slides --reveal-prefix "http://cdn.jsdelivr.net/reveal.js/2.6.2"
*** Coverter markdown para orgmode
#+BEGIN_SRC 
pandoc  -f markdown -t org -o Linguagens+de+Programação.org Linguagens+de+Programação.md
#+END_SRC
** Sagemath
*** Instalar nbextensionsii
#+BEGIN_SRC bash
pip install jupyter_contrib_nbextensions
pip install --user  jupyter_nbextensions_configurator
jupyter nbextensions_configurator enable --user 
smc-jupyter restart
#+END_SRC
**** No Browser
Then, in order to see the configurator, you have to open an ipynb file. Click on the the “About”
 button in the top right click on the link there to open the version of jupyter without the synchronization. 
There, either go to the main page or the one dedicated for the nbextensions. The URL looks like this:

https://cloud.sagemath.com/<your_project_id>/port/jupyter/nbextensions
** Hy Language
#+BEGIN_SRC bash
pip install hy
pip install hymagic
#+END_SRC
** gcloud
*** Generate a machine to run jupyter
#+BEGIN_SRC bash
pyenv local 2.7.8
gcloud auth login
gcloud compute --project "spindleslemke" ssh --zone "us-central1-f" "jupyter"
apt-get install bzip2
wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh
sudo bash Miniconda2-latest-Linux-x86_64.sh
conda install scikit-learn
conda install pandas
conda install jupyter
#+END_SRC
*** List Machines
**** gcloud compute instances list
*** Start Machine
**** gcloud compute instances start jupyter --zone us-central1-f
*** Acessar maquina
**** gcloud compute --project "spindleslemke" ssh --zone "us-central1-f" "jupyter"

*** Para iniciar o servidor do Jupyter
**** Digite no cliente local
#+BEGIN_SRC bash
gcloud config set project spindleslemke
gcloud compute firewall-rules create jupyternotebook  --allow tcp:8888  --source-ranges=0.0.0.0/0 --description="allows connections to jupyter server"
gcloud compute --project "spindleslemke" ssh --zone "us-central1-f" "jupyter"
#+END_SRC
**** Digite na cloud
#+BEGIN_SRC bash
jupyter notebook --ip=*  --port=8888 --no-browser &
#+END_SRC
*** Para copiar arquivos
#+BEGIN_SRC 
gcloud compute copy-files ~/Dropbox/MobileOrg/todo.org  jupyter:~/.  --zone "us-central1-f"
#+END_SRC
** Para atualizar Meu Blog no GitHub (old version)
#+BEGIN_SRC 
pelican content
cp -r output/* ../neylemke.github.io/.
cd ../neylemke.github.io
git add --all
git commit -m "Pelican 4 commit"
git push
#+END_SRC
** Para atualizar meu Blog no GitHub 
#+BEGIN_SRC bash 
cd /Users/neylemke/Dropbox/laptop/bloggithub/LessOrMore-master
jekyll build -d ../neylemke.github.io
cd  ../neylemke.github.io
git add --all
git commit -m "description"
git push
#+END_SRC

#+RESULTS:
| Configuration      | file:                                                       | /Users/neylemke/Dropbox/laptop/bloggithub/LessOrMore-master/_config.yml |          |                |               |              |
| Source:            | /Users/neylemke/Dropbox/laptop/bloggithub/LessOrMore-master |                                                                         |          |                |               |              |
| Destination:       | ../neylemke.github.io                                       |                                                                         |          |                |               |              |
| Incremental        | build:                                                      | disabled.                                                               | Enable   | with           | --incremental |              |
| Generating...      |                                                             |                                                                         |          |                |               |              |
| done               | in                                                          | 0.906                                                                   | seconds. |                |               |              |
| Auto-regeneration: | disabled.                                                   | Use                                                                     | --watch  | to             | enable.       |              |
| [master            | 1556b3d]                                                    | description                                                             |          |                |               |              |
| 2                  | files                                                       | changed,                                                                | 2        | insertions(+), | 8             | deletions(-) |

** Instalar jekyll
#+BEGIN_SRC shell
gem install jekyll
#+END_SRC
** Instalar Jupyterhub
*** Instruções Básicas https://github.com/jupyterhub/jupyterhub/wiki/Installation-of-Jupyterhub-on-remote-server
*** Instalar como Serviço https://github.com/jupyterhub/jupyterhub/wiki/Run-jupyterhub-as-a-system-service
** LaTeX
#+BEGIN_SRC bash
apt-get install texlive-full
#+END_SRC
** EAD-Jupyter
*** TODO Comprei o domínio EAD-Jupyter
** anaconda
*** Para atualizar
#+BEGIN_SRC shell
conda upgrade anaconda
conda update conda
#+END_SRC
** pweave
*** Para gerar documentação
#+BEGIN_SRC 
pweave -f pandoc FIR_design.mdw
pandoc -s --mathjax FIR_design.md -o FIR_design_pandoc.html
#+END_SRC
